#!/usr/bin/env node
'use strict';

const winston = require('winston');
const config = require('config');

// Setup Datastore
const datastoreConfig = config.get('datastore');
const DatastorePlugin = require(`screwdriver-datastore-${datastoreConfig.plugin}`);
const datastore = new DatastorePlugin(datastoreConfig[datastoreConfig.plugin]);

// Setup Executor
const executorConfig = config.get('executor');
const ExecutorPlugin = require(`screwdriver-executor-${executorConfig.plugin}`);
const executor = new ExecutorPlugin(executorConfig[executorConfig.plugin]);

// scm Plugin
const scmConfig = config.get('scm');
const ScmPlugin = require(`screwdriver-scm-${scmConfig.plugin}`);
const scmPlugin = new ScmPlugin({});

// Setup Login
const loginConfig = config.get('login');

// Setup HTTPd
const httpdConfig = config.get('httpd');

// Setup CORS
const corsConfig = config.get('cors');

// Setup Logging
const logBaseUrl = config.get('logging.baseUrl');

// Setup GitHub Webhooks
const gitHubSecret = config.get('webhooks.github.secret');

// Special urls for things like the UI
const ecosystem = config.get('ecosystem');

// Setup Model Factories
const Models = require('screwdriver-models');
const pipelineFactory = Models.PipelineFactory.getInstance({ datastore, scmPlugin });
const jobFactory = Models.JobFactory.getInstance({ datastore, scmPlugin });
const userFactory = Models.UserFactory.getInstance({
    datastore, scmPlugin, password: loginConfig.password
});
const buildFactory = Models.BuildFactory.getInstance({
    datastore,
    scmPlugin,
    executor,
    uiUri: ecosystem.ui
});

require('../')({
    httpd: httpdConfig,
    cors: corsConfig,
    login: loginConfig,
    pipelineFactory,
    jobFactory,
    userFactory,
    buildFactory,
    builds: {
        logBaseUrl
    },
    webhooks: {
        secret: gitHubSecret
    },
    stats: {
        executor,
        scmPlugin
    }
}, (err, server) => {
    if (err) {
        winston.error(err);

        return process.exit(1);
    }

    return winston.info('Server running at %s', server.info.uri);
});
