---
login:
    # A private key uses for signing jwt tokens. Can be anything
    jwtPrivateKey: THIS-IS-AN-INSECURE-KEY
    # The client id used for OAuth with github. Look up GitHub OAuth for details
    # https://developer.github.com/v3/oauth/
    oauthClientId: YOU-PROBABLY-WANT-SOMETHING-HERE
    # The client secret used for OAuth with github
    oauthClientSecret: AGAIN-SOMETHING-HERE-IS-USEFUL
    # A password used for encrypting session, and OAuth data.
    # **Needs to be minimum 32 characters**
    password: WOW-ANOTHER-INSECURE-PASSWORD!!!
    # A flag to set if the server is running over https.
    # Used as a flag for the OAuth flow
    https: false
    # Whitelist of users able to authenticate against the system
    # if empty, it allows everyone
    # @TODO remove this in the future
    whitelist:
        - FenrirUnbound
        - Filbird
        - cynthiax
        - d2lam
        - dvdizon
        - jer
        - minz1027
        - nicolaifsf
        - nkatzman
        - petey
        - shruthi-venkateswaran
        - stjohnjohnson
        - tkyi

httpd:
    # Port to listen on
    port: 8080
    # Host to listen on (set to localhost to only accept connections from this machine)
    host: 0.0.0.0
    # Externally routable URI (usually your load balancer or CNAME)
    uri: http://localhost:8080
    # SSL Support
    tls: false
        # If you want SSL, you can easily add it by replacing `tls: false` with an object that
        # provides the options required by `tls.createServer`
        # https://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener
        # key: |
        #     PRIVATE KEY HERE
        # cert: |
        #     YOUR CERT HERE

# Hapi Cross-origin resource sharing configuration
# See http://hapijs.com/api for available options
cors:
    origin:
        - http://cd.screwdriver.cd

datastore:
    plugin: imdb
    imdb:
        # File to read/write the database to
        filename: ./database.json
    dynamodb:
        # Prefix to table names
        # prefix: prod_
        # AWS Access Key ID
        accessKeyId: WHAT-A-LEGITIMATE-LOOKING-KEY-ID
        # AWS Secret Access Key
        secretAccessKey: TOTALLY-REAL-LOOKING-AWS-KEYS

executor:
    plugin: k8s
    k8s:
        # The host or IP of the kubernetes cluster
        host: kubernetes
        # The jwt token used for authenticating kubernetes requests
        token: NOT-A-REAL-JWT-TOKEN
        # Container tag to use
        version: latest

scm:
    plugin: github

webhooks:
    github:
        # Secret to add to GitHub webhooks so that we can validate them
        secret: SUPER-SECRET-SIGNING-THING
