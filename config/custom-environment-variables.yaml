# All values in this document are the ENVIRONMENT variable names that can override the defaults
# from `default.yaml`
---
auth:
    # A private key uses for signing jwt tokens
    # Easily generate one by running
    # $ openssl genrsa -out jwt.pem 2048
    jwtPrivateKey: SECRET_JWT_PRIVATE_KEY
    # The public key used for verifying the signature
    # Generate one by running
    # $ openssl rsa -in jwt.pem -pubout -out jwt.pub
    jwtPublicKey: SECRET_JWT_PUBLIC_KEY
    # The client id used for OAuth with github. Look up GitHub OAuth for details
    # https://developer.github.com/v3/oauth/
    oauthClientId: SECRET_OAUTH_CLIENT_ID
    # The client secret used for OAuth with github
    oauthClientSecret: SECRET_OAUTH_CLIENT_SECRET
    # A password used for encrypting session, and OAuth data.
    # **Needs to be minimum 32 characters**
    password: SECRET_PASSWORD
    # A flag to set if the server is running over https.
    # Used as a flag for the OAuth flow
    https: IS_HTTPS

httpd:
    # Port to listen on
    port: PORT
    # Host to listen on (set to 0.0.0.0 to accept all connections)
    host: HOST
    # Externally routable URI (usually your load balancer or CNAME)
    uri: URI

datastore:
    plugin: DATASTORE_PLUGIN
    imdb:
        # File to read/write the database to
        filename: DATASTORE_IMDB_FILENAME
    dynamodb:
        # AWS Access Key ID
        accessKeyId: DATASTORE_DYNAMODB_ID
        # AWS Secret Access Key
        secretAccessKey: DATASTORE_DYNAMODB_SECRET

executor:
    k8s:
        # The host or IP of the kubernetes cluster
        host: K8S_HOST
        # The jwt token used for authenticating kubernetes requests
        token: K8S_TOKEN
        # Launcher container tag to use
        launchVersion: LAUNCH_VERSION
        # Log Service container tag to use
        logVersion: LOG_VERSION


webhooks:
    github:
        # Secret to add to GitHub webhooks so that we can validate them
        secret: WEBHOOK_GITHUB_SECRET

ecosystem:
    # URL for the User Interface
    ui: ECOSYSTEM_UI
    # Badge service (needs to add a status and color)
    badges: ECOSYSTEM_BADGES
